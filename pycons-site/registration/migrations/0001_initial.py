# Generated by Django 3.2 on 2022-10-03 19:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import django_extensions.db.fields
import hitcount.views
import markdownx.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('profile_image', models.ImageField(blank=True, default='speakers/speaker.png', upload_to='speakers/')),
                ('name', models.CharField(default='', max_length=100)),
                ('surname', models.CharField(default='', max_length=100)),
                ('link_to_speaker_image', models.URLField(blank=True, default='', help_text="A link to your professional profile picture to be used when making speaker's announcements")),
                ('profession', models.CharField(default='', help_text="Speaker's profession. eg. Software Developer", max_length=200, null=True)),
                ('organization', models.CharField(blank=True, default='', help_text='Organization/Institution', max_length=200, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='auth.user')),
                ('biography', markdownx.models.MarkdownxField(default='', help_text='[Supports Markdown] - Give us a brief biography about yourself')),
                ('city', models.CharField(default='', help_text='City the speaker is from eg. Accra', max_length=100)),
                ('country', django_countries.fields.CountryField(default='GH', max_length=2)),
                ('contact_number', models.CharField(default='', help_text='Please include your country code (233).', max_length=50, null=True)),
                ('website', models.URLField(blank=True, help_text='Your website/blog URL.', null=True)),
                ('twitter_handle', models.CharField(blank=True, default='', help_text="Please enter only the user name eg.'mawy_7' ", max_length=100, null=True)),
                ('github_username', models.CharField(blank=True, default='', help_text="Please enter only the user name eg.'mawy_7' ", max_length=100, null=True)),
                ('linkedin', models.CharField(blank=True, default='', help_text="Please enter only the user name eg.'/mawy_7' ", max_length=100, null=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_visible', models.BooleanField(default=False)),
                ('published_date', models.DateField(blank=True, null=True)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='surname')),
            ],
            bases=(models.Model, hitcount.views.HitCountMixin),
        ),
        migrations.CreateModel(
            name='RegistrationProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activation_key', models.CharField(max_length=64, verbose_name='activation key')),
                ('activated', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'registration profile',
                'verbose_name_plural': 'registration profiles',
            },
        ),
        migrations.CreateModel(
            name='SupervisedRegistrationProfile',
            fields=[
                ('registrationprofile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='registration.registrationprofile')),
            ],
            bases=('registration.registrationprofile',),
        ),
    ]
